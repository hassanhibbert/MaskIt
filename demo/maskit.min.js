/*
 * MaskIt: A JavaScript masking tool
 * By Hassan Hibbert <http://hassanhibbert.com/>
 * Copyright 2016 Hassan Hibbert, under the MIT License
 * <https://opensource.org/licenses/mit-license.php/>
 */
"use strict";function _toConsumableArray(t){if(Array.isArray(t)){for(var n=0,e=Array(t.length);n<t.length;n++)e[n]=t[n];return e}return Array.from(t)}!function(t){function n(t,e,l){if(!(this instanceof n))return new n(t,e,l);var u,m=this;if(this.maskValue=null,this.maskPattern=t,this.maskElement=e&&h(e),this.events={onChangeHandler:s.bind(m),onInputHandler:a.bind(m)},this.maskDefinitions={0:{pattern:/\d/},A:{pattern:/[a-zA-Z]/},Z:{pattern:/[a-zA-Z0-9]/}},u={onInvalidHandler:null,onInputHandler:null,onComplete:null,maskDefinitions:null},this.options=r(l)?o(u,l):u,this.options.maskDefinitions&&o(this.maskDefinitions,this.options.maskDefinitions),this.maskElement){for(var p=0,c=this.maskElement.length;c>p;p+=1)this.maskElement[p].value=this.mask(this.maskElement[p].value);i.call(this)}}function e(){u(this.maskElement,"change",this.events.onChangeHandler,!1),u(this.maskElement,"input",this.events.onInputHandler,!1)}function i(){u(this.maskElement,"change",this.events.onChangeHandler,!0),u(this.maskElement,"input",this.events.onInputHandler,!0)}function s(t){t.target.value=this.mask(t.target.value)}function a(t){t.preventDefault(),this.options.onInputHandler?this.options.onInputHandler(t.target,this.mask(t.target.value)):t.target.value=this.mask(t.target.value)}function o(t,n){var e;for(e in n)n.hasOwnProperty(e)&&(t[e]=n[e]);return t}function r(t){return"[object Object]"===Object.prototype.toString.call(t)}function l(t){return"[object Function]"===Object.prototype.toString.call(t)}function h(t){return"string"==typeof t?[].concat(_toConsumableArray(document.querySelectorAll(t))):"undefined"==typeof t||t instanceof Array?t:[t]}function u(t,n,e,i){for(var s=(i?"add":"remove")+"EventListener",a=0,o=t.length;o>a;a++)t[a][s](n,e,!1)}n.prototype={mask:function(t){t=t.split("");for(var n,e,i,s,a=this.maskPattern.split(""),o=this.maskDefinitions,r=Object.keys(o),h=0,u=a.length;u>h;h+=1)n=a[h],e=r.indexOf(n)<0,i=n===t[h],e&&h<t.length?!i&&t.splice(h,0,n):h<t.length&&!o[n].pattern.test(t[h])&&(s="The character "+t[h]+" does not match this pattern: "+o[n].pattern,t.pop(),l(this.options.onInvalidHandler)&&this.options.onInvalidHandler.call(null,s,t[h],o[n].pattern));return t.length<=a.length&&(this.maskValue=t.join("")),l(this.options.onComplete)&&t.length===a.length&&this.options.onComplete.call(null,this.maskValue),this.maskValue},destroyEvents:function(){e.call(this)}},t.MaskIt=n}(window);